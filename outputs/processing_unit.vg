/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : O-2018.06
// Date      : Sat Nov 30 17:53:37 2019
/////////////////////////////////////////////////////////////


module down_counter ( clock, reset, enable, count_init, zero );
  input [5:0] count_init;
  input clock, reset, enable;
  output zero;
  wire   n2, n3, n4, n5, n6, n7, n19, n20, n21, n22, n23, n24, n1, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42;
  wire   [5:0] Count;

  dffs1 \Count_reg[5]  ( .DIN(n23), .CLK(clock), .QN(n2) );
  dffs1 \Count_reg[4]  ( .DIN(n22), .CLK(clock), .Q(Count[4]), .QN(n3) );
  dffs1 \Count_reg[2]  ( .DIN(n20), .CLK(clock), .Q(Count[2]), .QN(n5) );
  dffs1 \Count_reg[3]  ( .DIN(n21), .CLK(clock), .Q(Count[3]), .QN(n4) );
  dffs2 \Count_reg[0]  ( .DIN(n24), .CLK(clock), .Q(Count[0]), .QN(n7) );
  dffs2 \Count_reg[1]  ( .DIN(n19), .CLK(clock), .Q(Count[1]), .QN(n6) );
  nnd3s2 U3 ( .DIN1(n9), .DIN2(n10), .DIN3(n16), .Q(n19) );
  or2s1 U4 ( .DIN1(n17), .DIN2(n11), .Q(n9) );
  nnd3s3 U5 ( .DIN1(enable), .DIN2(n42), .DIN3(n14), .Q(n40) );
  i1s3 U6 ( .DIN(reset), .Q(n14) );
  i1s3 U7 ( .DIN(n25), .Q(n18) );
  nnd2s2 U8 ( .DIN1(n18), .DIN2(n5), .Q(n29) );
  ib1s1 U9 ( .DIN(n14), .Q(n1) );
  aoi21s1 U10 ( .DIN1(Count[3]), .DIN2(n29), .DIN3(n32), .Q(n31) );
  i1s3 U11 ( .DIN(n29), .Q(n28) );
  nb1s2 U12 ( .DIN(n40), .Q(n11) );
  oai221s2 U13 ( .DIN1(n39), .DIN2(n2), .DIN3(n41), .DIN4(n40), .DIN5(n38), 
        .Q(n23) );
  nnd2s1 U14 ( .DIN1(count_init[4]), .DIN2(n1), .Q(n35) );
  nnd2s1 U15 ( .DIN1(count_init[2]), .DIN2(n1), .Q(n26) );
  nnd2s1 U16 ( .DIN1(count_init[3]), .DIN2(n1), .Q(n30) );
  nnd2s1 U17 ( .DIN1(count_init[0]), .DIN2(n1), .Q(n15) );
  or2s2 U18 ( .DIN1(Count[0]), .DIN2(Count[1]), .Q(n25) );
  nnd2s1 U19 ( .DIN1(n40), .DIN2(n8), .Q(n10) );
  nor2s1 U20 ( .DIN1(reset), .DIN2(n6), .Q(n8) );
  aoi21s1 U21 ( .DIN1(Count[1]), .DIN2(Count[0]), .DIN3(n18), .Q(n17) );
  nnd2s1 U22 ( .DIN1(count_init[1]), .DIN2(n1), .Q(n16) );
  nnd2s1 U23 ( .DIN1(count_init[5]), .DIN2(n1), .Q(n38) );
  hi1s1 U24 ( .DIN(n42), .Q(zero) );
  xnr2s1 U25 ( .DIN1(n37), .DIN2(n2), .Q(n41) );
  hi1s1 U26 ( .DIN(n37), .Q(n33) );
  aoi21s1 U27 ( .DIN1(Count[4]), .DIN2(n34), .DIN3(n33), .Q(n36) );
  ib1s1 U28 ( .DIN(n34), .Q(n32) );
  or4s1 U29 ( .DIN1(n13), .DIN2(Count[4]), .DIN3(Count[1]), .DIN4(n12), .Q(n42) );
  nnd2s2 U30 ( .DIN1(n4), .DIN2(n5), .Q(n13) );
  nnd2s2 U31 ( .DIN1(n7), .DIN2(n2), .Q(n12) );
  nnd2s2 U32 ( .DIN1(n40), .DIN2(n14), .Q(n39) );
  oai221s2 U33 ( .DIN1(n7), .DIN2(n39), .DIN3(Count[0]), .DIN4(n11), .DIN5(n15), .Q(n24) );
  aoi21s2 U34 ( .DIN1(Count[2]), .DIN2(n25), .DIN3(n28), .Q(n27) );
  oai221s2 U35 ( .DIN1(n27), .DIN2(n11), .DIN3(n5), .DIN4(n39), .DIN5(n26), 
        .Q(n20) );
  nnd2s2 U36 ( .DIN1(n28), .DIN2(n4), .Q(n34) );
  oai221s2 U37 ( .DIN1(n31), .DIN2(n11), .DIN3(n4), .DIN4(n39), .DIN5(n30), 
        .Q(n21) );
  nnd2s2 U38 ( .DIN1(n32), .DIN2(n3), .Q(n37) );
  oai221s2 U39 ( .DIN1(n36), .DIN2(n11), .DIN3(n3), .DIN4(n39), .DIN5(n35), 
        .Q(n22) );
endmodule


module FSM_selector ( clock, reset, enable, selector, zero_select );
  output [2:0] selector;
  input clock, reset, enable;
  output zero_select;
  wire   n10, n18, n19, n20, n21, n22, n23, net3452, net3454, net3458, net3463,
         net3466, net3468, net3471, net3472, net3475, net3644, net3658,
         net4318, n7, n8, n9, n11, n12, n13, n14, n15, n16, n17, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35;
  wire   [5:0] count;

  dffs2 \count_reg[0]  ( .DIN(n23), .CLK(clock), .Q(count[0]), .QN(n9) );
  dffs2 \count_reg[1]  ( .DIN(n22), .CLK(clock), .Q(count[1]), .QN(n7) );
  dffs2 \count_reg[5]  ( .DIN(n18), .CLK(clock), .Q(n12), .QN(net3658) );
  dffs2 \count_reg[4]  ( .DIN(n19), .CLK(clock), .Q(net4318), .QN(n10) );
  dffs1 \count_reg[2]  ( .DIN(n21), .CLK(clock), .Q(count[2]), .QN(net3644) );
  dffs1 \count_reg[3]  ( .DIN(n20), .CLK(clock), .Q(net3466) );
  ib1s1 U3 ( .DIN(1'b0), .Q(selector[2]) );
  ib1s1 U5 ( .DIN(1'b1), .Q(selector[1]) );
  ib1s1 U7 ( .DIN(1'b0), .Q(selector[0]) );
  i1s3 U9 ( .DIN(net3475), .Q(net3454) );
  nnd2s2 U10 ( .DIN1(net3452), .DIN2(n25), .Q(net3475) );
  i1s3 U11 ( .DIN(reset), .Q(n25) );
  nnd2s1 U12 ( .DIN1(net3454), .DIN2(net3471), .Q(n27) );
  ib1s1 U13 ( .DIN(net3468), .Q(n14) );
  ib1s1 U14 ( .DIN(n9), .Q(n11) );
  hi1s1 U15 ( .DIN(n12), .Q(n13) );
  ib1s1 U16 ( .DIN(n7), .Q(n17) );
  or2s1 U17 ( .DIN1(net3452), .DIN2(n30), .Q(n8) );
  nnd2s2 U18 ( .DIN1(n8), .DIN2(n29), .Q(n20) );
  nnd2s1 U21 ( .DIN1(net3454), .DIN2(net3466), .Q(n29) );
  oai21s3 U22 ( .DIN1(net3472), .DIN2(net3452), .DIN3(n26), .Q(n22) );
  oai21s3 U23 ( .DIN1(n35), .DIN2(net3452), .DIN3(n34), .Q(n18) );
  xnr2s1 U24 ( .DIN1(n11), .DIN2(n17), .Q(net3472) );
  nor2s2 U25 ( .DIN1(net3658), .DIN2(n10), .Q(n16) );
  nnd3s2 U26 ( .DIN1(net3466), .DIN2(n14), .DIN3(count[2]), .Q(net3458) );
  nnd2s2 U27 ( .DIN1(n14), .DIN2(count[2]), .Q(net3463) );
  and4s3 U28 ( .DIN1(n15), .DIN2(net3466), .DIN3(n16), .DIN4(count[2]), .Q(
        zero_select) );
  and2s2 U29 ( .DIN1(count[0]), .DIN2(count[1]), .Q(n15) );
  mxi21s1 U30 ( .DIN1(net3452), .DIN2(net3475), .SIN(n11), .Q(n23) );
  nnd2s3 U31 ( .DIN1(enable), .DIN2(n25), .Q(net3452) );
  or2s1 U32 ( .DIN1(net3452), .DIN2(n32), .Q(n24) );
  nnd2s2 U33 ( .DIN1(n24), .DIN2(n31), .Q(n19) );
  nnd2s1 U34 ( .DIN1(net3454), .DIN2(n17), .Q(n26) );
  xnr2s1 U35 ( .DIN1(n33), .DIN2(n13), .Q(n35) );
  xor2s1 U36 ( .DIN1(net3463), .DIN2(net3466), .Q(n30) );
  or2s1 U37 ( .DIN1(n10), .DIN2(net3458), .Q(n33) );
  nnd2s1 U38 ( .DIN1(net3454), .DIN2(net4318), .Q(n31) );
  xor2s1 U39 ( .DIN1(net3458), .DIN2(net4318), .Q(n32) );
  nnd2s1 U40 ( .DIN1(net3454), .DIN2(n12), .Q(n34) );
  nnd2s1 U41 ( .DIN1(n17), .DIN2(n11), .Q(net3468) );
  i1s1 U42 ( .DIN(net3644), .Q(net3471) );
  xor2s1 U43 ( .DIN1(net3468), .DIN2(count[2]), .Q(n28) );
  oai21s2 U44 ( .DIN1(net3452), .DIN2(n28), .DIN3(n27), .Q(n21) );
endmodule


module counter_3 ( clock, reset, enable, init, bit_in, init_val, count );
  input [5:0] init_val;
  output [5:0] count;
  input clock, reset, enable, init, bit_in;
  wire   net2125, net3415, net3420, net3428, net3431, net3437, net3441,
         net3442, net3447, net4194, net4346, net4414, net4462, net4569,
         net4647, net5172, net3421, net3718, net3424, net3423, net3417, n1, n2,
         n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31,
         n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44;

  dffs1 \count_reg[4]  ( .DIN(net2125), .CLK(clock), .Q(count[4]), .QN(net5172) );
  dffs1 \count_reg[5]  ( .DIN(n5), .CLK(clock), .Q(count[5]), .QN(n41) );
  dffs1 \count_reg[2]  ( .DIN(n43), .CLK(clock), .Q(count[2]) );
  dffs1 \count_reg[0]  ( .DIN(n44), .CLK(clock), .Q(count[0]) );
  dffs1 \count_reg[1]  ( .DIN(n7), .CLK(clock), .Q(count[1]), .QN(net3442) );
  dffs1 \count_reg[3]  ( .DIN(n6), .CLK(clock), .Q(count[3]), .QN(n38) );
  ib1s1 U3 ( .DIN(net3437), .Q(n2) );
  i1s1 U4 ( .DIN(n3), .Q(n1) );
  ib1s1 U5 ( .DIN(n14), .Q(n11) );
  ib1s2 U6 ( .DIN(net3441), .Q(net3447) );
  nnd3s2 U7 ( .DIN1(net3718), .DIN2(enable), .DIN3(n17), .Q(n14) );
  i1s2 U8 ( .DIN(enable), .Q(n12) );
  nnd2s1 U9 ( .DIN1(net3415), .DIN2(net4462), .Q(n30) );
  nnd2s1 U10 ( .DIN1(net3415), .DIN2(n42), .Q(n23) );
  and2s1 U11 ( .DIN1(count[0]), .DIN2(count[1]), .Q(n4) );
  dsmxc31s2 U12 ( .DIN1(count[1]), .DIN2(net4194), .CLK(count[0]), .Q(n33) );
  nor2s2 U13 ( .DIN1(net4569), .DIN2(n18), .Q(n10) );
  nor2s1 U14 ( .DIN1(net4569), .DIN2(n18), .Q(net3420) );
  nnd2s2 U15 ( .DIN1(n26), .DIN2(n4), .Q(net4569) );
  i1s3 U16 ( .DIN(reset), .Q(net3718) );
  i1s1 U17 ( .DIN(init), .Q(n3) );
  i1s3 U18 ( .DIN(init), .Q(n17) );
  i1s3 U19 ( .DIN(net3417), .Q(net3424) );
  oai21s3 U20 ( .DIN1(n13), .DIN2(n10), .DIN3(n16), .Q(net3417) );
  nnd3s2 U21 ( .DIN1(n23), .DIN2(n24), .DIN3(n22), .Q(n5) );
  nnd3s2 U22 ( .DIN1(n29), .DIN2(n28), .DIN3(n27), .Q(n6) );
  nnd3s2 U23 ( .DIN1(n21), .DIN2(n20), .DIN3(n19), .Q(n7) );
  and2s1 U24 ( .DIN1(net3718), .DIN2(n1), .Q(n8) );
  i1s3 U25 ( .DIN(n13), .Q(net3415) );
  i1s3 U26 ( .DIN(n32), .Q(n44) );
  nnd2s2 U27 ( .DIN1(n11), .DIN2(n18), .Q(net4346) );
  nor2s1 U28 ( .DIN1(net4569), .DIN2(n18), .Q(n9) );
  i1s8 U29 ( .DIN(bit_in), .Q(n18) );
  i1s3 U30 ( .DIN(net3431), .Q(net3437) );
  nnd2s2 U31 ( .DIN1(net4414), .DIN2(n16), .Q(net3431) );
  hi1s1 U32 ( .DIN(n18), .Q(net4462) );
  nnd3s2 U33 ( .DIN1(net3718), .DIN2(n17), .DIN3(enable), .Q(n13) );
  nnd3s2 U34 ( .DIN1(n12), .DIN2(n3), .DIN3(net3718), .Q(n16) );
  mxi21s2 U35 ( .DIN1(net3424), .DIN2(net3423), .SIN(net5172), .Q(n15) );
  aoi21s3 U36 ( .DIN1(init_val[4]), .DIN2(n8), .DIN3(n15), .Q(net3421) );
  nnd2s1 U37 ( .DIN1(net3415), .DIN2(n9), .Q(net3423) );
  oai21s1 U38 ( .DIN1(n13), .DIN2(n10), .DIN3(n16), .Q(net4647) );
  nnd2s2 U39 ( .DIN1(net4346), .DIN2(n16), .Q(net3441) );
  and2s2 U40 ( .DIN1(bit_in), .DIN2(n4), .Q(net3428) );
  and2s1 U41 ( .DIN1(bit_in), .DIN2(net3442), .Q(net4194) );
  i1s3 U42 ( .DIN(net3421), .Q(net2125) );
  aoi21s3 U43 ( .DIN1(init_val[0]), .DIN2(n8), .DIN3(n31), .Q(n32) );
  or2s2 U44 ( .DIN1(net3428), .DIN2(n14), .Q(net4414) );
  aoi21s3 U45 ( .DIN1(init_val[2]), .DIN2(n8), .DIN3(n35), .Q(n36) );
  nnd2s1 U46 ( .DIN1(init_val[1]), .DIN2(n8), .Q(n19) );
  nnd2s1 U47 ( .DIN1(n33), .DIN2(net3415), .Q(n20) );
  nnd2s1 U48 ( .DIN1(count[1]), .DIN2(net3441), .Q(n21) );
  nnd2s1 U49 ( .DIN1(init_val[5]), .DIN2(n8), .Q(n22) );
  nnd2s1 U50 ( .DIN1(count[5]), .DIN2(net4647), .Q(n24) );
  nnd2s2 U51 ( .DIN1(count[3]), .DIN2(count[2]), .Q(n25) );
  ib1s1 U52 ( .DIN(n25), .Q(n26) );
  nnd2s1 U53 ( .DIN1(init_val[3]), .DIN2(n8), .Q(n27) );
  nnd2s1 U54 ( .DIN1(net3415), .DIN2(n39), .Q(n28) );
  nnd2s1 U55 ( .DIN1(count[3]), .DIN2(n2), .Q(n29) );
  nnd2s1 U56 ( .DIN1(net3428), .DIN2(n38), .Q(n37) );
  i1s2 U57 ( .DIN(n36), .Q(n43) );
  nnd2s1 U58 ( .DIN1(net3415), .DIN2(net3428), .Q(n34) );
  mxi21s2 U59 ( .DIN1(n30), .DIN2(net3447), .SIN(count[0]), .Q(n31) );
  mxi21s2 U60 ( .DIN1(n34), .DIN2(net3437), .SIN(count[2]), .Q(n35) );
  mxi21s2 U61 ( .DIN1(n38), .DIN2(n37), .SIN(count[2]), .Q(n39) );
  nnd2s2 U62 ( .DIN1(net3420), .DIN2(n41), .Q(n40) );
  mxi21s2 U63 ( .DIN1(n41), .DIN2(n40), .SIN(count[4]), .Q(n42) );
endmodule


module multiplexer_3 ( bin_in, selector, zero_select, bin_out );
  input [5:0] bin_in;
  input [2:0] selector;
  input zero_select;
  output bin_out;
  wire   n1, n2, n3, n4, n5;

  aoi21s3 U2 ( .DIN1(n5), .DIN2(n4), .DIN3(zero_select), .Q(bin_out) );
  dsmxc31s2 U3 ( .DIN1(n3), .DIN2(n2), .CLK(selector[0]), .Q(n4) );
  mxi21s2 U4 ( .DIN1(bin_in[0]), .DIN2(bin_in[1]), .SIN(selector[0]), .Q(n1)
         );
  or3s1 U5 ( .DIN1(selector[1]), .DIN2(n1), .DIN3(selector[2]), .Q(n5) );
  aoi22s2 U6 ( .DIN1(selector[1]), .DIN2(bin_in[2]), .DIN3(selector[2]), 
        .DIN4(bin_in[4]), .Q(n3) );
  aoi22s2 U7 ( .DIN1(bin_in[3]), .DIN2(selector[1]), .DIN3(bin_in[5]), .DIN4(
        selector[2]), .Q(n2) );
endmodule


module processing_element_3 ( clock, reset, enable, init, selector, 
        zero_select, init_val, weight_val, output_val );
  input [2:0] selector;
  input [5:0] init_val;
  input [5:0] weight_val;
  output [5:0] output_val;
  input clock, reset, enable, init, zero_select;
  wire   bit_med;

  counter_3 counter_inst ( .clock(clock), .reset(reset), .enable(enable), 
        .init(init), .bit_in(bit_med), .init_val(init_val), .count(output_val)
         );
  multiplexer_3 multiplexer_inst ( .bin_in(weight_val), .selector(selector), 
        .zero_select(zero_select), .bin_out(bit_med) );
endmodule


module counter_2 ( clock, reset, enable, init, bit_in, init_val, count );
  input [5:0] init_val;
  output [5:0] count;
  input clock, reset, enable, init, bit_in;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68;

  dffs1 \count_reg[3]  ( .DIN(n15), .CLK(clock), .Q(count[3]), .QN(n55) );
  dffs1 \count_reg[4]  ( .DIN(n68), .CLK(clock), .Q(count[4]), .QN(n21) );
  dffs1 \count_reg[1]  ( .DIN(n3), .CLK(clock), .Q(count[1]), .QN(n50) );
  dffs1 \count_reg[0]  ( .DIN(n9), .CLK(clock), .Q(count[0]), .QN(n43) );
  dffs1 \count_reg[5]  ( .DIN(n7), .CLK(clock), .Q(count[5]), .QN(n63) );
  dffs1 \count_reg[2]  ( .DIN(n12), .CLK(clock), .Q(count[2]), .QN(n46) );
  nnd3s2 U3 ( .DIN1(enable), .DIN2(n48), .DIN3(n47), .Q(n60) );
  ib1s2 U4 ( .DIN(init), .Q(n47) );
  i1s4 U5 ( .DIN(reset), .Q(n48) );
  nnd3s3 U6 ( .DIN1(enable), .DIN2(n48), .DIN3(n47), .Q(n29) );
  nnd2s2 U7 ( .DIN1(n23), .DIN2(n1), .Q(n15) );
  and2s2 U8 ( .DIN1(n22), .DIN2(n16), .Q(n1) );
  i1s8 U9 ( .DIN(n49), .Q(n67) );
  ib1s2 U10 ( .DIN(n29), .Q(n39) );
  nnd2s1 U11 ( .DIN1(n39), .DIN2(n24), .Q(n25) );
  nnd2s2 U12 ( .DIN1(n14), .DIN2(n13), .Q(n12) );
  nnd2s2 U13 ( .DIN1(n11), .DIN2(n10), .Q(n9) );
  or2s1 U14 ( .DIN1(n53), .DIN2(n30), .Q(n62) );
  nnd2s2 U15 ( .DIN1(n25), .DIN2(n59), .Q(n51) );
  dsmxc31s2 U16 ( .DIN1(count[1]), .DIN2(n42), .CLK(count[0]), .Q(n52) );
  and2s1 U17 ( .DIN1(n45), .DIN2(n21), .Q(n20) );
  nnd3s2 U18 ( .DIN1(n60), .DIN2(n49), .DIN3(n48), .Q(n32) );
  nnd2s2 U19 ( .DIN1(n39), .DIN2(n40), .Q(n41) );
  and2s1 U20 ( .DIN1(count[1]), .DIN2(count[0]), .Q(n2) );
  i1s2 U21 ( .DIN(n53), .Q(n58) );
  nnd3s2 U22 ( .DIN1(n28), .DIN2(n27), .DIN3(n26), .Q(n3) );
  mxi21s2 U23 ( .DIN1(n51), .DIN2(n4), .SIN(n43), .Q(n11) );
  and2s2 U24 ( .DIN1(n66), .DIN2(n8), .Q(n4) );
  mxi21s2 U25 ( .DIN1(n5), .DIN2(n6), .SIN(n46), .Q(n14) );
  nnd2s1 U26 ( .DIN1(n32), .DIN2(n31), .Q(n5) );
  and2s2 U27 ( .DIN1(n66), .DIN2(n58), .Q(n6) );
  i1s2 U28 ( .DIN(n61), .Q(n68) );
  nnd3s2 U29 ( .DIN1(n35), .DIN2(n34), .DIN3(n33), .Q(n7) );
  nnd2s1 U30 ( .DIN1(n53), .DIN2(n39), .Q(n31) );
  ib1s1 U31 ( .DIN(n24), .Q(n8) );
  i1s1 U32 ( .DIN(bit_in), .Q(n24) );
  nnd2s1 U33 ( .DIN1(n66), .DIN2(n65), .Q(n34) );
  nnd2s2 U34 ( .DIN1(init_val[0]), .DIN2(n67), .Q(n10) );
  nnd2s2 U35 ( .DIN1(init_val[2]), .DIN2(n67), .Q(n13) );
  nnd2s2 U36 ( .DIN1(init_val[3]), .DIN2(n67), .Q(n16) );
  nnd2s2 U37 ( .DIN1(n18), .DIN2(n19), .Q(n17) );
  nnd2s2 U38 ( .DIN1(n64), .DIN2(count[4]), .Q(n18) );
  nnd2s1 U39 ( .DIN1(n66), .DIN2(n20), .Q(n19) );
  nnd2s1 U40 ( .DIN1(n66), .DIN2(n57), .Q(n22) );
  nnd2s1 U41 ( .DIN1(n56), .DIN2(count[3]), .Q(n23) );
  oai21s1 U42 ( .DIN1(n29), .DIN2(n58), .DIN3(n44), .Q(n56) );
  nnd2s2 U43 ( .DIN1(init_val[1]), .DIN2(n67), .Q(n26) );
  nnd2s1 U44 ( .DIN1(n66), .DIN2(n52), .Q(n27) );
  nnd2s2 U45 ( .DIN1(count[1]), .DIN2(n51), .Q(n28) );
  nnd3s1 U46 ( .DIN1(n49), .DIN2(n60), .DIN3(n48), .Q(n59) );
  or2s2 U47 ( .DIN1(n38), .DIN2(n53), .Q(n40) );
  nnd2s3 U48 ( .DIN1(bit_in), .DIN2(n2), .Q(n53) );
  nnd2s1 U49 ( .DIN1(n63), .DIN2(n36), .Q(n30) );
  nnd3s1 U50 ( .DIN1(n49), .DIN2(n60), .DIN3(n48), .Q(n44) );
  nnd2s2 U51 ( .DIN1(n32), .DIN2(n41), .Q(n64) );
  nnd2s1 U52 ( .DIN1(init_val[5]), .DIN2(n67), .Q(n33) );
  nnd2s1 U53 ( .DIN1(count[5]), .DIN2(n64), .Q(n35) );
  i1s8 U54 ( .DIN(n29), .Q(n66) );
  nor2s1 U55 ( .DIN1(n55), .DIN2(n46), .Q(n36) );
  nor2s1 U56 ( .DIN1(n53), .DIN2(n38), .Q(n45) );
  nor2s1 U57 ( .DIN1(n55), .DIN2(n46), .Q(n37) );
  ib1s1 U58 ( .DIN(n37), .Q(n38) );
  and2s1 U59 ( .DIN1(bit_in), .DIN2(n50), .Q(n42) );
  aoi21s3 U60 ( .DIN1(init_val[4]), .DIN2(n67), .DIN3(n17), .Q(n61) );
  nnd2s2 U61 ( .DIN1(init), .DIN2(n48), .Q(n49) );
  nnd2s2 U62 ( .DIN1(n58), .DIN2(n55), .Q(n54) );
  mxi21s2 U63 ( .DIN1(n55), .DIN2(n54), .SIN(count[2]), .Q(n57) );
  mxi21s2 U64 ( .DIN1(n63), .DIN2(n62), .SIN(count[4]), .Q(n65) );
endmodule


module multiplexer_2 ( bin_in, selector, zero_select, bin_out );
  input [5:0] bin_in;
  input [2:0] selector;
  input zero_select;
  output bin_out;
  wire   n1, n2, n3, n4, n5, n6;

  and2s1 U2 ( .DIN1(n6), .DIN2(n5), .Q(n1) );
  nor2s2 U3 ( .DIN1(n1), .DIN2(zero_select), .Q(bin_out) );
  dsmxc31s2 U4 ( .DIN1(n4), .DIN2(n3), .CLK(selector[0]), .Q(n5) );
  mxi21s2 U5 ( .DIN1(bin_in[0]), .DIN2(bin_in[1]), .SIN(selector[0]), .Q(n2)
         );
  or3s1 U6 ( .DIN1(selector[1]), .DIN2(n2), .DIN3(selector[2]), .Q(n6) );
  aoi22s2 U7 ( .DIN1(selector[1]), .DIN2(bin_in[2]), .DIN3(selector[2]), 
        .DIN4(bin_in[4]), .Q(n4) );
  aoi22s2 U8 ( .DIN1(bin_in[3]), .DIN2(selector[1]), .DIN3(bin_in[5]), .DIN4(
        selector[2]), .Q(n3) );
endmodule


module processing_element_2 ( clock, reset, enable, init, selector, 
        zero_select, init_val, weight_val, output_val );
  input [2:0] selector;
  input [5:0] init_val;
  input [5:0] weight_val;
  output [5:0] output_val;
  input clock, reset, enable, init, zero_select;
  wire   bit_med;

  counter_2 counter_inst ( .clock(clock), .reset(reset), .enable(enable), 
        .init(init), .bit_in(bit_med), .init_val(init_val), .count(output_val)
         );
  multiplexer_2 multiplexer_inst ( .bin_in(weight_val), .selector(selector), 
        .zero_select(zero_select), .bin_out(bit_med) );
endmodule


module counter_1 ( clock, reset, enable, init, bit_in, init_val, count );
  input [5:0] init_val;
  output [5:0] count;
  input clock, reset, enable, init, bit_in;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62;

  dffs1 \count_reg[5]  ( .DIN(n9), .CLK(clock), .Q(count[5]), .QN(n59) );
  dffs1 \count_reg[2]  ( .DIN(n35), .CLK(clock), .Q(count[2]) );
  dffs1 \count_reg[0]  ( .DIN(n16), .CLK(clock), .Q(count[0]), .QN(n3) );
  dffs1 \count_reg[1]  ( .DIN(n15), .CLK(clock), .Q(count[1]), .QN(n50) );
  dffs1 \count_reg[3]  ( .DIN(n2), .CLK(clock), .Q(count[3]), .QN(n54) );
  dffs1 \count_reg[4]  ( .DIN(n11), .CLK(clock), .Q(count[4]), .QN(n34) );
  nnd2s1 U3 ( .DIN1(n55), .DIN2(count[3]), .Q(n26) );
  and2s1 U4 ( .DIN1(count[1]), .DIN2(count[0]), .Q(n40) );
  ib1s1 U5 ( .DIN(init), .Q(n8) );
  ib1s1 U6 ( .DIN(enable), .Q(n10) );
  nnd2s2 U7 ( .DIN1(n44), .DIN2(n14), .Q(n45) );
  or2s1 U8 ( .DIN1(n19), .DIN2(n27), .Q(n53) );
  nnd2s2 U9 ( .DIN1(n6), .DIN2(n59), .Q(n58) );
  nnd2s2 U10 ( .DIN1(n12), .DIN2(n13), .Q(n11) );
  nnd2s2 U11 ( .DIN1(n18), .DIN2(n17), .Q(n16) );
  nnd2s2 U12 ( .DIN1(n39), .DIN2(n42), .Q(n51) );
  or2s1 U13 ( .DIN1(n28), .DIN2(n1), .Q(n39) );
  nnd3s2 U14 ( .DIN1(enable), .DIN2(n47), .DIN3(n46), .Q(n1) );
  ib1s6 U15 ( .DIN(n33), .Q(n44) );
  nnd3s1 U16 ( .DIN1(n48), .DIN2(n47), .DIN3(n1), .Q(n43) );
  ib1s1 U17 ( .DIN(n48), .Q(n62) );
  nnd2s1 U18 ( .DIN1(init), .DIN2(n47), .Q(n48) );
  nnd3s2 U19 ( .DIN1(n26), .DIN2(n25), .DIN3(n24), .Q(n2) );
  mxi21s2 U20 ( .DIN1(n51), .DIN2(n23), .SIN(n3), .Q(n18) );
  mxi21s2 U21 ( .DIN1(n4), .DIN2(n5), .SIN(n34), .Q(n13) );
  nnd2s2 U22 ( .DIN1(n45), .DIN2(n43), .Q(n4) );
  and2s2 U23 ( .DIN1(n44), .DIN2(n6), .Q(n5) );
  and3s2 U24 ( .DIN1(n57), .DIN2(count[2]), .DIN3(count[3]), .Q(n6) );
  and2s1 U25 ( .DIN1(n44), .DIN2(n28), .Q(n23) );
  mxi21s2 U26 ( .DIN1(n7), .DIN2(n55), .SIN(count[2]), .Q(n37) );
  and2s1 U27 ( .DIN1(n44), .DIN2(n41), .Q(n7) );
  nnd3s2 U28 ( .DIN1(n57), .DIN2(count[2]), .DIN3(count[3]), .Q(n14) );
  nnd3s2 U29 ( .DIN1(n30), .DIN2(n29), .DIN3(n31), .Q(n9) );
  nnd3s2 U30 ( .DIN1(n8), .DIN2(n47), .DIN3(n10), .Q(n42) );
  or2s1 U31 ( .DIN1(n38), .DIN2(n48), .Q(n12) );
  mxi21s2 U32 ( .DIN1(n58), .DIN2(n59), .SIN(n34), .Q(n61) );
  nnd3s3 U33 ( .DIN1(enable), .DIN2(n47), .DIN3(n46), .Q(n33) );
  i1s4 U34 ( .DIN(reset), .Q(n47) );
  nnd3s2 U35 ( .DIN1(n22), .DIN2(n21), .DIN3(n20), .Q(n15) );
  nnd2s1 U36 ( .DIN1(n43), .DIN2(n45), .Q(n60) );
  mxi21s2 U37 ( .DIN1(n54), .DIN2(n53), .SIN(count[2]), .Q(n56) );
  ib1s1 U38 ( .DIN(n27), .Q(n28) );
  nnd2s2 U39 ( .DIN1(init_val[0]), .DIN2(n62), .Q(n17) );
  nnd2s1 U40 ( .DIN1(n61), .DIN2(n44), .Q(n30) );
  oai21s3 U41 ( .DIN1(n41), .DIN2(n32), .DIN3(n42), .Q(n55) );
  nnd2s2 U42 ( .DIN1(count[5]), .DIN2(n60), .Q(n31) );
  i1s3 U43 ( .DIN(init), .Q(n46) );
  nnd2s2 U44 ( .DIN1(n54), .DIN2(n40), .Q(n19) );
  ib1s1 U45 ( .DIN(bit_in), .Q(n27) );
  nnd2s2 U46 ( .DIN1(init_val[1]), .DIN2(n62), .Q(n20) );
  nnd2s1 U47 ( .DIN1(n44), .DIN2(n52), .Q(n21) );
  nnd2s1 U48 ( .DIN1(count[1]), .DIN2(n51), .Q(n22) );
  nnd2s2 U49 ( .DIN1(init_val[3]), .DIN2(n62), .Q(n24) );
  nnd2s1 U50 ( .DIN1(n44), .DIN2(n56), .Q(n25) );
  nnd2s1 U51 ( .DIN1(init_val[5]), .DIN2(n62), .Q(n29) );
  nnd3s1 U52 ( .DIN1(n46), .DIN2(n47), .DIN3(enable), .Q(n32) );
  nnd2s2 U53 ( .DIN1(n37), .DIN2(n36), .Q(n35) );
  nnd2s2 U54 ( .DIN1(init_val[2]), .DIN2(n62), .Q(n36) );
  ib1s1 U55 ( .DIN(init_val[4]), .Q(n38) );
  and2s1 U56 ( .DIN1(bit_in), .DIN2(n40), .Q(n41) );
  and2s2 U57 ( .DIN1(bit_in), .DIN2(n40), .Q(n57) );
  nnd2s1 U58 ( .DIN1(n28), .DIN2(n50), .Q(n49) );
  mxi21s2 U59 ( .DIN1(n50), .DIN2(n49), .SIN(count[0]), .Q(n52) );
endmodule


module multiplexer_1 ( bin_in, selector, zero_select, bin_out );
  input [5:0] bin_in;
  input [2:0] selector;
  input zero_select;
  output bin_out;
  wire   n1, n2, n3, n4, n5;

  aoi21s3 U2 ( .DIN1(n5), .DIN2(n4), .DIN3(zero_select), .Q(bin_out) );
  dsmxc31s2 U3 ( .DIN1(n3), .DIN2(n2), .CLK(selector[0]), .Q(n4) );
  mxi21s2 U4 ( .DIN1(bin_in[0]), .DIN2(bin_in[1]), .SIN(selector[0]), .Q(n1)
         );
  or3s1 U5 ( .DIN1(selector[1]), .DIN2(n1), .DIN3(selector[2]), .Q(n5) );
  aoi22s2 U6 ( .DIN1(selector[1]), .DIN2(bin_in[2]), .DIN3(selector[2]), 
        .DIN4(bin_in[4]), .Q(n3) );
  aoi22s2 U7 ( .DIN1(bin_in[3]), .DIN2(selector[1]), .DIN3(bin_in[5]), .DIN4(
        selector[2]), .Q(n2) );
endmodule


module processing_element_1 ( clock, reset, enable, init, selector, 
        zero_select, init_val, weight_val, output_val );
  input [2:0] selector;
  input [5:0] init_val;
  input [5:0] weight_val;
  output [5:0] output_val;
  input clock, reset, enable, init, zero_select;
  wire   bit_med;

  counter_1 counter_inst ( .clock(clock), .reset(reset), .enable(enable), 
        .init(init), .bit_in(bit_med), .init_val(init_val), .count(output_val)
         );
  multiplexer_1 multiplexer_inst ( .bin_in(weight_val), .selector(selector), 
        .zero_select(zero_select), .bin_out(bit_med) );
endmodule


module counter_0 ( clock, reset, enable, init, bit_in, init_val, count );
  input [5:0] init_val;
  output [5:0] count;
  input clock, reset, enable, init, bit_in;
  wire   net3285, net3288, net3291, net3295, net3299, net3311, net3313,
         net3618, net3749, net3752, net4379, net4499, net4498, net4509,
         net4610, net4510, net3319, net4418, net3320, net3314, net3312,
         net3296, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47;

  dffs1 \count_reg[5]  ( .DIN(n35), .CLK(clock), .Q(count[5]), .QN(n46) );
  dffs1 \count_reg[1]  ( .DIN(n12), .CLK(clock), .Q(count[1]), .QN(net3313) );
  dffs1 \count_reg[3]  ( .DIN(n11), .CLK(clock), .Q(count[3]), .QN(n41) );
  dffs1 \count_reg[4]  ( .DIN(n5), .CLK(clock), .Q(count[4]) );
  dffs1 \count_reg[0]  ( .DIN(net4509), .CLK(clock), .Q(count[0]), .QN(n14) );
  dffs1 \count_reg[2]  ( .DIN(n27), .CLK(clock), .Q(count[2]), .QN(n16) );
  nor2s1 U3 ( .DIN1(n42), .DIN2(n1), .Q(n19) );
  nnd2s2 U4 ( .DIN1(count[2]), .DIN2(n28), .Q(n1) );
  nnd2s1 U5 ( .DIN1(n31), .DIN2(net3749), .Q(n2) );
  nnd2s1 U6 ( .DIN1(net4418), .DIN2(n24), .Q(net3312) );
  ib1s2 U7 ( .DIN(n8), .Q(net3295) );
  i1s5 U8 ( .DIN(init), .Q(n22) );
  nor2s1 U9 ( .DIN1(net3312), .DIN2(n3), .Q(n18) );
  nnd2s2 U10 ( .DIN1(count[0]), .DIN2(net4510), .Q(n3) );
  and3s1 U11 ( .DIN1(enable), .DIN2(net3320), .DIN3(n22), .Q(n4) );
  nnd2s3 U12 ( .DIN1(n6), .DIN2(n7), .Q(n5) );
  nnd2s2 U13 ( .DIN1(init_val[4]), .DIN2(net3285), .Q(n6) );
  mx21s3 U14 ( .DIN1(n44), .DIN2(net3295), .SIN(count[4]), .Q(n7) );
  nnd2s2 U15 ( .DIN1(n23), .DIN2(n24), .Q(n8) );
  nnd2s1 U16 ( .DIN1(n23), .DIN2(n24), .Q(net3288) );
  nnd3s2 U17 ( .DIN1(n13), .DIN2(net3320), .DIN3(net3319), .Q(net3749) );
  nnd3s3 U18 ( .DIN1(enable), .DIN2(net3320), .DIN3(n22), .Q(net3296) );
  ib1s6 U19 ( .DIN(reset), .Q(net3320) );
  nnd2s3 U20 ( .DIN1(net4499), .DIN2(net3618), .Q(n23) );
  ib1s1 U21 ( .DIN(net3299), .Q(net4498) );
  nnd2s2 U22 ( .DIN1(init_val[2]), .DIN2(net3285), .Q(n28) );
  nnd2s2 U23 ( .DIN1(init_val[0]), .DIN2(net3285), .Q(net4510) );
  nnd2s2 U24 ( .DIN1(n4), .DIN2(net3291), .Q(n44) );
  and2s2 U25 ( .DIN1(count[0]), .DIN2(count[1]), .Q(n9) );
  ib1s1 U26 ( .DIN(bit_in), .Q(n25) );
  ib1s1 U27 ( .DIN(n25), .Q(n26) );
  and2s2 U28 ( .DIN1(count[3]), .DIN2(count[2]), .Q(n10) );
  nnd3s2 U29 ( .DIN1(n34), .DIN2(n33), .DIN3(n32), .Q(n11) );
  nnd3s2 U30 ( .DIN1(net4610), .DIN2(n30), .DIN3(n29), .Q(n12) );
  i1s4 U31 ( .DIN(net3296), .Q(net4499) );
  nnd2s1 U32 ( .DIN1(net3311), .DIN2(net3752), .Q(n30) );
  nnd3s1 U33 ( .DIN1(net3320), .DIN2(n22), .DIN3(enable), .Q(n13) );
  aoi21s3 U34 ( .DIN1(n14), .DIN2(n15), .DIN3(n18), .Q(net4509) );
  and2s2 U35 ( .DIN1(n21), .DIN2(net4510), .Q(n15) );
  aoi21s3 U36 ( .DIN1(n16), .DIN2(n17), .DIN3(n19), .Q(n27) );
  and2s2 U37 ( .DIN1(n39), .DIN2(n28), .Q(n17) );
  i1s8 U38 ( .DIN(net3319), .Q(net3285) );
  nnd3s2 U39 ( .DIN1(enable), .DIN2(net3320), .DIN3(n22), .Q(n20) );
  nnd2s2 U40 ( .DIN1(net4499), .DIN2(n25), .Q(net4418) );
  nnd2s1 U41 ( .DIN1(count[3]), .DIN2(n2), .Q(n34) );
  nnd2s2 U42 ( .DIN1(n31), .DIN2(net3749), .Q(n42) );
  nnd2s1 U43 ( .DIN1(net3752), .DIN2(n26), .Q(n21) );
  nnd2s1 U44 ( .DIN1(n26), .DIN2(net3313), .Q(net3314) );
  mxi21s2 U45 ( .DIN1(net3313), .DIN2(net3314), .SIN(count[0]), .Q(net3311) );
  nnd2s1 U46 ( .DIN1(count[1]), .DIN2(net3312), .Q(net4610) );
  and3s1 U47 ( .DIN1(enable), .DIN2(net3320), .DIN3(n22), .Q(net3752) );
  and2s2 U48 ( .DIN1(bit_in), .DIN2(net4379), .Q(net3291) );
  and2s2 U49 ( .DIN1(bit_in), .DIN2(n9), .Q(net3299) );
  nnd3s2 U50 ( .DIN1(n20), .DIN2(net3319), .DIN3(net3320), .Q(n24) );
  nnd2s2 U51 ( .DIN1(net3320), .DIN2(init), .Q(net3319) );
  i1s3 U52 ( .DIN(net3291), .Q(net3618) );
  nnd2s2 U53 ( .DIN1(init_val[1]), .DIN2(net3285), .Q(n29) );
  nnd2s2 U54 ( .DIN1(net4499), .DIN2(net4498), .Q(n31) );
  nnd2s1 U55 ( .DIN1(net3752), .DIN2(net3299), .Q(n39) );
  nnd2s2 U56 ( .DIN1(init_val[3]), .DIN2(net3285), .Q(n32) );
  nnd2s1 U57 ( .DIN1(n43), .DIN2(net3752), .Q(n33) );
  and2s1 U58 ( .DIN1(n9), .DIN2(n10), .Q(net4379) );
  nnd2s1 U59 ( .DIN1(net3291), .DIN2(n46), .Q(n45) );
  nnd3s2 U60 ( .DIN1(n38), .DIN2(n37), .DIN3(n36), .Q(n35) );
  nnd2s1 U61 ( .DIN1(init_val[5]), .DIN2(net3285), .Q(n36) );
  nnd2s1 U62 ( .DIN1(n4), .DIN2(n47), .Q(n37) );
  nnd2s1 U63 ( .DIN1(count[5]), .DIN2(net3288), .Q(n38) );
  nnd2s2 U64 ( .DIN1(net3299), .DIN2(n41), .Q(n40) );
  mxi21s2 U65 ( .DIN1(n41), .DIN2(n40), .SIN(count[2]), .Q(n43) );
  mxi21s2 U66 ( .DIN1(n46), .DIN2(n45), .SIN(count[4]), .Q(n47) );
endmodule


module multiplexer_0 ( bin_in, selector, zero_select, bin_out );
  input [5:0] bin_in;
  input [2:0] selector;
  input zero_select;
  output bin_out;
  wire   n1, n2, n3, n4, n5;

  aoi21s3 U2 ( .DIN1(n1), .DIN2(n2), .DIN3(zero_select), .Q(bin_out) );
  dsmxc31s2 U3 ( .DIN1(n3), .DIN2(n4), .CLK(selector[0]), .Q(n2) );
  aoi22s2 U4 ( .DIN1(bin_in[3]), .DIN2(selector[1]), .DIN3(bin_in[5]), .DIN4(
        selector[2]), .Q(n4) );
  aoi22s2 U5 ( .DIN1(selector[1]), .DIN2(bin_in[2]), .DIN3(selector[2]), 
        .DIN4(bin_in[4]), .Q(n3) );
  or3s1 U6 ( .DIN1(selector[1]), .DIN2(n5), .DIN3(selector[2]), .Q(n1) );
  mxi21s2 U7 ( .DIN1(bin_in[0]), .DIN2(bin_in[1]), .SIN(selector[0]), .Q(n5)
         );
endmodule


module processing_element_0 ( clock, reset, enable, init, selector, 
        zero_select, init_val, weight_val, output_val );
  input [2:0] selector;
  input [5:0] init_val;
  input [5:0] weight_val;
  output [5:0] output_val;
  input clock, reset, enable, init, zero_select;
  wire   bit_med;

  counter_0 counter_inst ( .clock(clock), .reset(reset), .enable(enable), 
        .init(init), .bit_in(bit_med), .init_val(init_val), .count(output_val)
         );
  multiplexer_0 multiplexer_inst ( .bin_in(weight_val), .selector(selector), 
        .zero_select(zero_select), .bin_out(bit_med) );
endmodule


module processing_unit ( clock, reset, start, input_req, input_val, 
        input_ready, .weight_vals({\weight_vals[1][1][5] , 
        \weight_vals[1][1][4] , \weight_vals[1][1][3] , \weight_vals[1][1][2] , 
        \weight_vals[1][1][1] , \weight_vals[1][1][0] , \weight_vals[1][0][5] , 
        \weight_vals[1][0][4] , \weight_vals[1][0][3] , \weight_vals[1][0][2] , 
        \weight_vals[1][0][1] , \weight_vals[1][0][0] , \weight_vals[0][1][5] , 
        \weight_vals[0][1][4] , \weight_vals[0][1][3] , \weight_vals[0][1][2] , 
        \weight_vals[0][1][1] , \weight_vals[0][1][0] , \weight_vals[0][0][5] , 
        \weight_vals[0][0][4] , \weight_vals[0][0][3] , \weight_vals[0][0][2] , 
        \weight_vals[0][0][1] , \weight_vals[0][0][0] }), output_val, 
        output_valid, done );
  input [5:0] input_val;
  output [5:0] output_val;
  input clock, reset, start, input_ready, \weight_vals[1][1][5] ,
         \weight_vals[1][1][4] , \weight_vals[1][1][3] ,
         \weight_vals[1][1][2] , \weight_vals[1][1][1] ,
         \weight_vals[1][1][0] , \weight_vals[1][0][5] ,
         \weight_vals[1][0][4] , \weight_vals[1][0][3] ,
         \weight_vals[1][0][2] , \weight_vals[1][0][1] ,
         \weight_vals[1][0][0] , \weight_vals[0][1][5] ,
         \weight_vals[0][1][4] , \weight_vals[0][1][3] ,
         \weight_vals[0][1][2] , \weight_vals[0][1][1] ,
         \weight_vals[0][1][0] , \weight_vals[0][0][5] ,
         \weight_vals[0][0][4] , \weight_vals[0][0][3] ,
         \weight_vals[0][0][2] , \weight_vals[0][0][1] ,
         \weight_vals[0][0][0] ;
  output input_req, output_valid, done;
  wire   N25, N26, zero_flag, N76, N77, N78, _1_net_, zero_select, _3_net_,
         \output_vals[0][1][5] , \output_vals[0][1][4] ,
         \output_vals[0][1][3] , \output_vals[0][1][2] ,
         \output_vals[0][1][1] , \output_vals[0][1][0] , \init_vals[1][1][5] ,
         \init_vals[1][1][4] , \init_vals[1][1][3] , \init_vals[1][1][2] ,
         \init_vals[1][1][1] , \init_vals[1][1][0] , \init_vals[1][0][5] ,
         \init_vals[1][0][4] , \init_vals[1][0][3] , \init_vals[1][0][2] ,
         \init_vals[1][0][1] , \init_vals[1][0][0] , \init_vals[0][1][5] ,
         \init_vals[0][1][4] , \init_vals[0][1][3] , \init_vals[0][1][2] ,
         \init_vals[0][1][1] , \init_vals[0][1][0] , _7_net_, _8_net_,
         _13_net_, _18_net_, \stored_partial_sums[0][3][5] ,
         \stored_partial_sums[0][3][4] , \stored_partial_sums[0][3][3] ,
         \stored_partial_sums[0][3][2] , \stored_partial_sums[0][3][1] ,
         \stored_partial_sums[0][3][0] , \stored_partial_sums[0][2][5] ,
         \stored_partial_sums[0][2][4] , \stored_partial_sums[0][2][3] ,
         \stored_partial_sums[0][2][2] , \stored_partial_sums[0][2][1] ,
         \stored_partial_sums[0][2][0] , \stored_partial_sums[0][1][5] ,
         \stored_partial_sums[0][1][4] , \stored_partial_sums[0][1][3] ,
         \stored_partial_sums[0][1][2] , \stored_partial_sums[0][1][1] ,
         \stored_partial_sums[0][1][0] , \stored_partial_sums[0][0][5] ,
         \stored_partial_sums[0][0][4] , \stored_partial_sums[0][0][3] ,
         \stored_partial_sums[0][0][2] , \stored_partial_sums[0][0][1] ,
         \stored_partial_sums[0][0][0] , n84, n85, n86, n95, n99, n100, n101,
         n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112,
         n116, n117, n118, n119, n120, n121, n122, n149, n150, n151, n152,
         n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163,
         n164, n165, n166, n167, n168, n169, net3526, net3557, net3558,
         net3564, net3580, net3584, net3672, net4195, net4258, net4257,
         net4279, net4278, net4321, net4348, net4347, net4405, net4426,
         net4452, net4454, net4508, net3528, net4178, n170, n171, n172, n173,
         n174, n175, n176, n177, n178, n179, n180, n181, n182, n183, n184,
         n185, n186, n187, n188, n190, n191, n192, n193, n194, n195, n196,
         n197, n198, n199, n200, n201, n202, n203, n204, n205, n206, n207,
         n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, n218,
         n219, n220, n221, n222, n223, n224, n225, n226, n227, n228, n229,
         n230, n231, n232, n233, n234, n235, n236, n237, n238, n239, n240,
         n241, n242, n243, n244, n245, n246, n247, n248, n249, n250, n251,
         n252, n253, n254, n255;
  wire   [2:0] state;
  wire   [1:0] height_index;
  wire   [2:0] selector;

  dffs2 \width_index_reg[0]  ( .DIN(n169), .CLK(clock), .Q(N25), .QN(n100) );
  dffs2 \width_index_reg[1]  ( .DIN(n255), .CLK(clock), .Q(N26), .QN(n99) );
  dffs2 \state_reg[1]  ( .DIN(N77), .CLK(clock), .Q(state[1]), .QN(n86) );
  down_counter down_counter_inst ( .clock(clock), .reset(_1_net_), .enable(
        n176), .count_init(input_val), .zero(zero_flag) );
  FSM_selector FSM_selector_inst ( .clock(clock), .reset(_1_net_), .enable(
        n176), .zero_select(zero_select) );
  processing_element_3 \PE_row[0].PE_column[0].PEs  ( .clock(clock), .reset(
        _7_net_), .enable(_3_net_), .init(n177), .selector({1'b1, 1'b0, 1'b1}), 
        .zero_select(zero_select), .init_val({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .weight_val({\weight_vals[0][0][5] , \weight_vals[0][0][4] , 
        \weight_vals[0][0][3] , \weight_vals[0][0][2] , \weight_vals[0][0][1] , 
        \weight_vals[0][0][0] }), .output_val({\init_vals[0][1][5] , 
        \init_vals[0][1][4] , \init_vals[0][1][3] , \init_vals[0][1][2] , 
        \init_vals[0][1][1] , \init_vals[0][1][0] }) );
  processing_element_2 \PE_row[0].PE_column[1].PEs  ( .clock(clock), .reset(
        _7_net_), .enable(_8_net_), .init(n177), .selector({1'b1, 1'b0, 1'b1}), 
        .zero_select(zero_select), .init_val({\init_vals[0][1][5] , 
        \init_vals[0][1][4] , \init_vals[0][1][3] , \init_vals[0][1][2] , 
        \init_vals[0][1][1] , \init_vals[0][1][0] }), .weight_val({
        \weight_vals[0][1][5] , \weight_vals[0][1][4] , \weight_vals[0][1][3] , 
        \weight_vals[0][1][2] , \weight_vals[0][1][1] , \weight_vals[0][1][0] }), .output_val({\output_vals[0][1][5] , \output_vals[0][1][4] , 
        \output_vals[0][1][3] , \output_vals[0][1][2] , \output_vals[0][1][1] , 
        \output_vals[0][1][0] }) );
  processing_element_1 \PE_row[1].PE_column[0].PEs  ( .clock(clock), .reset(
        n170), .enable(_13_net_), .init(n178), .selector({1'b1, 1'b0, 1'b1}), 
        .zero_select(zero_select), .init_val({\init_vals[1][0][5] , 
        \init_vals[1][0][4] , \init_vals[1][0][3] , \init_vals[1][0][2] , 
        \init_vals[1][0][1] , \init_vals[1][0][0] }), .weight_val({
        \weight_vals[1][0][5] , \weight_vals[1][0][4] , \weight_vals[1][0][3] , 
        \weight_vals[1][0][2] , \weight_vals[1][0][1] , \weight_vals[1][0][0] }), .output_val({\init_vals[1][1][5] , \init_vals[1][1][4] , 
        \init_vals[1][1][3] , \init_vals[1][1][2] , \init_vals[1][1][1] , 
        \init_vals[1][1][0] }) );
  processing_element_0 \PE_row[1].PE_column[1].PEs  ( .clock(clock), .reset(
        net4508), .enable(_18_net_), .init(n248), .selector({1'b1, 1'b0, 1'b1}), .zero_select(zero_select), .init_val({\init_vals[1][1][5] , 
        \init_vals[1][1][4] , \init_vals[1][1][3] , \init_vals[1][1][2] , 
        \init_vals[1][1][1] , \init_vals[1][1][0] }), .weight_val({
        \weight_vals[1][1][5] , \weight_vals[1][1][4] , \weight_vals[1][1][3] , 
        \weight_vals[1][1][2] , \weight_vals[1][1][1] , \weight_vals[1][1][0] }), .output_val(output_val) );
  dffles1 \stored_partial_sums_reg[0][3][0]  ( .DIN(1'b0), .EB(net4348), .CLK(
        clock), .Q(\stored_partial_sums[0][3][0] ) );
  dffles1 \stored_partial_sums_reg[0][3][1]  ( .DIN(1'b0), .EB(net4348), .CLK(
        clock), .Q(\stored_partial_sums[0][3][1] ) );
  dffles1 \stored_partial_sums_reg[0][3][2]  ( .DIN(1'b0), .EB(net4348), .CLK(
        clock), .Q(\stored_partial_sums[0][3][2] ) );
  dffles1 \stored_partial_sums_reg[0][3][3]  ( .DIN(1'b0), .EB(net4348), .CLK(
        clock), .Q(\stored_partial_sums[0][3][3] ) );
  dffles1 \stored_partial_sums_reg[0][3][4]  ( .DIN(1'b0), .EB(net4348), .CLK(
        clock), .Q(\stored_partial_sums[0][3][4] ) );
  dffles1 \stored_partial_sums_reg[0][3][5]  ( .DIN(1'b0), .EB(net4348), .CLK(
        clock), .Q(\stored_partial_sums[0][3][5] ) );
  dffs1 \stored_partial_sums_reg[0][2][4]  ( .DIN(n165), .CLK(clock), .Q(
        \stored_partial_sums[0][2][4] ), .QN(n102) );
  dffs1 \stored_partial_sums_reg[0][2][2]  ( .DIN(n163), .CLK(clock), .Q(
        \stored_partial_sums[0][2][2] ), .QN(n104) );
  dffs1 \stored_partial_sums_reg[0][2][3]  ( .DIN(n164), .CLK(clock), .Q(
        \stored_partial_sums[0][2][3] ), .QN(n103) );
  dffs1 \stored_partial_sums_reg[0][2][5]  ( .DIN(n166), .CLK(clock), .Q(
        \stored_partial_sums[0][2][5] ), .QN(n101) );
  dffs1 \stored_partial_sums_reg[0][2][0]  ( .DIN(n161), .CLK(clock), .Q(
        \stored_partial_sums[0][2][0] ), .QN(n106) );
  dffs1 \stored_partial_sums_reg[0][2][1]  ( .DIN(n162), .CLK(clock), .Q(
        \stored_partial_sums[0][2][1] ), .QN(n105) );
  dffs2 \state_reg[2]  ( .DIN(N78), .CLK(clock), .Q(state[2]), .QN(n84) );
  dffs2 \state_reg[0]  ( .DIN(N76), .CLK(clock), .Q(state[0]), .QN(net3580) );
  dffs1 \stored_partial_sums_reg[0][1][5]  ( .DIN(n160), .CLK(clock), .Q(
        \stored_partial_sums[0][1][5] ), .QN(n107) );
  dffs1 \stored_partial_sums_reg[0][1][4]  ( .DIN(n159), .CLK(clock), .Q(
        \stored_partial_sums[0][1][4] ), .QN(n108) );
  dffs1 \stored_partial_sums_reg[0][1][3]  ( .DIN(n158), .CLK(clock), .Q(
        \stored_partial_sums[0][1][3] ), .QN(n109) );
  dffs1 \stored_partial_sums_reg[0][1][2]  ( .DIN(n157), .CLK(clock), .Q(
        \stored_partial_sums[0][1][2] ), .QN(n110) );
  dffs1 \stored_partial_sums_reg[0][1][1]  ( .DIN(n156), .CLK(clock), .Q(
        \stored_partial_sums[0][1][1] ), .QN(n111) );
  dffs1 \stored_partial_sums_reg[0][1][0]  ( .DIN(n155), .CLK(clock), .Q(
        \stored_partial_sums[0][1][0] ), .QN(n112) );
  dffs1 \stored_partial_sums_reg[0][0][5]  ( .DIN(n154), .CLK(clock), .Q(
        \stored_partial_sums[0][0][5] ) );
  dffs1 \stored_partial_sums_reg[0][0][4]  ( .DIN(n153), .CLK(clock), .Q(
        \stored_partial_sums[0][0][4] ) );
  dffs1 \stored_partial_sums_reg[0][0][3]  ( .DIN(n152), .CLK(clock), .Q(
        \stored_partial_sums[0][0][3] ) );
  dffs1 \stored_partial_sums_reg[0][0][2]  ( .DIN(n151), .CLK(clock), .Q(
        \stored_partial_sums[0][0][2] ) );
  dffs1 \stored_partial_sums_reg[0][0][1]  ( .DIN(n150), .CLK(clock), .Q(
        \stored_partial_sums[0][0][1] ) );
  dffs1 \stored_partial_sums_reg[0][0][0]  ( .DIN(n149), .CLK(clock), .Q(
        \stored_partial_sums[0][0][0] ) );
  dffs2 \height_index_reg[0]  ( .DIN(n167), .CLK(clock), .Q(height_index[0]), 
        .QN(n239) );
  dffs2 \height_index_reg[1]  ( .DIN(n168), .CLK(clock), .Q(height_index[1]), 
        .QN(n95) );
  i1s2 U94 ( .DIN(state[0]), .Q(net4257) );
  i1s3 U95 ( .DIN(n221), .Q(n85) );
  nnd2s3 U96 ( .DIN1(net3528), .DIN2(n171), .Q(net4508) );
  nnd2s2 U97 ( .DIN1(n216), .DIN2(n95), .Q(n213) );
  oai21s2 U98 ( .DIN1(n229), .DIN2(n211), .DIN3(net4452), .Q(n216) );
  i1s1 U99 ( .DIN(net4452), .Q(net4347) );
  nnd2s3 U100 ( .DIN1(net4178), .DIN2(n84), .Q(n171) );
  ib1s1 U101 ( .DIN(n206), .Q(n207) );
  ib1s1 U102 ( .DIN(n208), .Q(n209) );
  and2s2 U103 ( .DIN1(height_index[0]), .DIN2(height_index[1]), .Q(n174) );
  ib1s1 U104 ( .DIN(n99), .Q(n242) );
  nnd2s2 U105 ( .DIN1(n100), .DIN2(n99), .Q(n240) );
  nnd2s2 U106 ( .DIN1(n191), .DIN2(n190), .Q(\init_vals[1][0][0] ) );
  oai21s2 U107 ( .DIN1(n112), .DIN2(n207), .DIN3(n222), .Q(n155) );
  oai21s2 U108 ( .DIN1(n105), .DIN2(n209), .DIN3(n231), .Q(n162) );
  oai21s2 U109 ( .DIN1(n106), .DIN2(n209), .DIN3(n230), .Q(n161) );
  oai21s2 U110 ( .DIN1(n101), .DIN2(n209), .DIN3(n235), .Q(n166) );
  oai21s2 U111 ( .DIN1(n103), .DIN2(n209), .DIN3(n233), .Q(n164) );
  oai21s2 U112 ( .DIN1(n104), .DIN2(n209), .DIN3(n232), .Q(n163) );
  oai21s2 U113 ( .DIN1(n102), .DIN2(n209), .DIN3(n234), .Q(n165) );
  ib1s1 U114 ( .DIN(net4347), .Q(net4348) );
  and2s2 U115 ( .DIN1(n238), .DIN2(n241), .Q(_13_net_) );
  aoi21s2 U116 ( .DIN1(net3557), .DIN2(net3558), .DIN3(reset), .Q(N76) );
  ib1s1 U117 ( .DIN(state[1]), .Q(n172) );
  i1s1 U118 ( .DIN(\output_vals[0][1][1] ), .Q(n250) );
  ib1s1 U119 ( .DIN(net4321), .Q(net3672) );
  i1s3 U120 ( .DIN(net3580), .Q(net4258) );
  ib1s1 U121 ( .DIN(n236), .Q(n208) );
  nb1s2 U122 ( .DIN(n84), .Q(net4426) );
  nnd2s1 U123 ( .DIN1(n220), .DIN2(n214), .Q(n215) );
  aoi22s2 U124 ( .DIN1(zero_flag), .DIN2(n176), .DIN3(input_ready), .DIN4(
        input_req), .Q(net3558) );
  nnd2s1 U125 ( .DIN1(n183), .DIN2(\output_vals[0][1][0] ), .Q(n222) );
  oai21s2 U126 ( .DIN1(n95), .DIN2(n216), .DIN3(n215), .Q(n168) );
  i1s1 U127 ( .DIN(n84), .Q(net4454) );
  i1s8 U128 ( .DIN(n243), .Q(n244) );
  oai13s1 U129 ( .DIN2(n100), .DIN3(n245), .DIN4(n242), .DIN1(net4452), .Q(
        n243) );
  i1s4 U130 ( .DIN(n237), .Q(n238) );
  and2s2 U131 ( .DIN1(net4279), .DIN2(n236), .Q(n181) );
  i1s8 U132 ( .DIN(net4278), .Q(net4279) );
  oai21s2 U133 ( .DIN1(N25), .DIN2(n245), .DIN3(net4452), .Q(n228) );
  and2s2 U134 ( .DIN1(net4279), .DIN2(n236), .Q(n182) );
  and2s2 U135 ( .DIN1(net4279), .DIN2(n236), .Q(n184) );
  nnd2s2 U136 ( .DIN1(net3528), .DIN2(n171), .Q(n170) );
  nnd2s1 U137 ( .DIN1(n181), .DIN2(\output_vals[0][1][1] ), .Q(n231) );
  nnd2s1 U138 ( .DIN1(n181), .DIN2(\output_vals[0][1][4] ), .Q(n234) );
  and2s3 U139 ( .DIN1(n238), .DIN2(n240), .Q(_18_net_) );
  oai21s3 U140 ( .DIN1(n245), .DIN2(n229), .DIN3(net4452), .Q(n236) );
  nnd2s1 U141 ( .DIN1(N26), .DIN2(N25), .Q(n241) );
  nnd2s3 U142 ( .DIN1(net4195), .DIN2(n240), .Q(n245) );
  nnd2s3 U143 ( .DIN1(n85), .DIN2(n246), .Q(n237) );
  and2s2 U144 ( .DIN1(n172), .DIN2(state[0]), .Q(net4178) );
  and2s2 U145 ( .DIN1(net4454), .DIN2(net4178), .Q(net4195) );
  nnd2s1 U146 ( .DIN1(net4426), .DIN2(net4178), .Q(net4452) );
  nnd2s3 U147 ( .DIN1(n171), .DIN2(net3528), .Q(_7_net_) );
  ib1s1 U148 ( .DIN(reset), .Q(net3528) );
  and2s1 U149 ( .DIN1(net3584), .DIN2(net3528), .Q(N77) );
  nnd2s3 U150 ( .DIN1(net3528), .DIN2(net3526), .Q(_1_net_) );
  aoi21s1 U151 ( .DIN1(net3564), .DIN2(net3526), .DIN3(reset), .Q(N78) );
  nor2s2 U152 ( .DIN1(n174), .DIN2(n173), .Q(_8_net_) );
  nnd2s1 U153 ( .DIN1(n240), .DIN2(n85), .Q(n173) );
  nor2s1 U154 ( .DIN1(n174), .DIN2(n221), .Q(n210) );
  hi1s1 U155 ( .DIN(n85), .Q(n175) );
  nnd2s3 U156 ( .DIN1(net4405), .DIN2(n84), .Q(n179) );
  i1s8 U157 ( .DIN(n175), .Q(n176) );
  i1s4 U158 ( .DIN(n86), .Q(net4405) );
  and2s3 U159 ( .DIN1(n180), .DIN2(net4258), .Q(n177) );
  i1s4 U160 ( .DIN(n179), .Q(n180) );
  and2s2 U161 ( .DIN1(net4258), .DIN2(n180), .Q(n178) );
  and2s2 U162 ( .DIN1(net4258), .DIN2(n180), .Q(n248) );
  nnd2s2 U163 ( .DIN1(n199), .DIN2(n198), .Q(\init_vals[1][0][4] ) );
  hi1s1 U164 ( .DIN(net4405), .Q(net4321) );
  and2s2 U165 ( .DIN1(net4279), .DIN2(n228), .Q(n183) );
  hi1s1 U166 ( .DIN(net4195), .Q(net4278) );
  i1s1 U167 ( .DIN(n211), .Q(n220) );
  dsmxc31s1 U168 ( .DIN1(n185), .DIN2(n186), .CLK(n220), .Q(n255) );
  oai21s2 U169 ( .DIN1(n116), .DIN2(n250), .DIN3(n118), .Q(n150) );
  oai21s2 U170 ( .DIN1(n116), .DIN2(n251), .DIN3(n119), .Q(n151) );
  oai21s2 U171 ( .DIN1(n116), .DIN2(n252), .DIN3(n120), .Q(n152) );
  oai21s2 U172 ( .DIN1(n116), .DIN2(n253), .DIN3(n121), .Q(n153) );
  oai21s2 U173 ( .DIN1(n116), .DIN2(n254), .DIN3(n122), .Q(n154) );
  and2s1 U174 ( .DIN1(n247), .DIN2(n246), .Q(output_valid) );
  hi1s1 U175 ( .DIN(n245), .Q(n247) );
  hi1s1 U176 ( .DIN(n228), .Q(n206) );
  and2s1 U177 ( .DIN1(n100), .DIN2(n99), .Q(n203) );
  ib1s1 U178 ( .DIN(n218), .Q(n219) );
  oai21s2 U179 ( .DIN1(n116), .DIN2(n249), .DIN3(n117), .Q(n149) );
  or3s1 U180 ( .DIN1(n229), .DIN2(n239), .DIN3(n95), .Q(n218) );
  and2s1 U181 ( .DIN1(N26), .DIN2(net4348), .Q(n185) );
  dsmxc31s1 U182 ( .DIN1(N26), .DIN2(n99), .CLK(N25), .Q(n186) );
  dsmxc31s1 U183 ( .DIN1(n187), .DIN2(n100), .CLK(n220), .Q(n169) );
  and2s1 U184 ( .DIN1(net4348), .DIN2(N25), .Q(n187) );
  ib1s1 U185 ( .DIN(\output_vals[0][1][0] ), .Q(n249) );
  ib1s1 U186 ( .DIN(\output_vals[0][1][2] ), .Q(n251) );
  ib1s1 U187 ( .DIN(\output_vals[0][1][4] ), .Q(n253) );
  ib1s1 U188 ( .DIN(\output_vals[0][1][5] ), .Q(n254) );
  ib1s1 U189 ( .DIN(\output_vals[0][1][3] ), .Q(n252) );
  mxi21s1 U190 ( .DIN1(n239), .DIN2(n212), .SIN(n216), .Q(n167) );
  and2s1 U191 ( .DIN1(net4405), .DIN2(state[2]), .Q(n188) );
  and3s1 U192 ( .DIN1(net3672), .DIN2(net3580), .DIN3(net4426), .Q(input_req)
         );
  and2s1 U193 ( .DIN1(n188), .DIN2(net4258), .Q(done) );
  nor2s1 U194 ( .DIN1(n99), .DIN2(N25), .Q(n201) );
  nor2s1 U195 ( .DIN1(n99), .DIN2(n100), .Q(n200) );
  aoi22s1 U196 ( .DIN1(\stored_partial_sums[0][2][0] ), .DIN2(n201), .DIN3(
        \stored_partial_sums[0][3][0] ), .DIN4(n200), .Q(n191) );
  nor2s1 U197 ( .DIN1(n100), .DIN2(N26), .Q(n202) );
  aoi22s1 U198 ( .DIN1(\stored_partial_sums[0][0][0] ), .DIN2(n203), .DIN3(
        \stored_partial_sums[0][1][0] ), .DIN4(n202), .Q(n190) );
  aoi22s1 U199 ( .DIN1(\stored_partial_sums[0][2][1] ), .DIN2(n201), .DIN3(
        \stored_partial_sums[0][3][1] ), .DIN4(n200), .Q(n193) );
  aoi22s1 U200 ( .DIN1(\stored_partial_sums[0][0][1] ), .DIN2(n203), .DIN3(
        \stored_partial_sums[0][1][1] ), .DIN4(n202), .Q(n192) );
  nnd2s1 U201 ( .DIN1(n193), .DIN2(n192), .Q(\init_vals[1][0][1] ) );
  aoi22s1 U202 ( .DIN1(\stored_partial_sums[0][2][2] ), .DIN2(n201), .DIN3(
        \stored_partial_sums[0][3][2] ), .DIN4(n200), .Q(n195) );
  aoi22s1 U203 ( .DIN1(\stored_partial_sums[0][0][2] ), .DIN2(n203), .DIN3(
        \stored_partial_sums[0][1][2] ), .DIN4(n202), .Q(n194) );
  nnd2s1 U204 ( .DIN1(n195), .DIN2(n194), .Q(\init_vals[1][0][2] ) );
  aoi22s1 U205 ( .DIN1(\stored_partial_sums[0][2][3] ), .DIN2(n201), .DIN3(
        \stored_partial_sums[0][3][3] ), .DIN4(n200), .Q(n197) );
  aoi22s1 U206 ( .DIN1(\stored_partial_sums[0][0][3] ), .DIN2(n203), .DIN3(
        \stored_partial_sums[0][1][3] ), .DIN4(n202), .Q(n196) );
  nnd2s1 U207 ( .DIN1(n197), .DIN2(n196), .Q(\init_vals[1][0][3] ) );
  aoi22s1 U208 ( .DIN1(\stored_partial_sums[0][2][4] ), .DIN2(n201), .DIN3(
        \stored_partial_sums[0][3][4] ), .DIN4(n200), .Q(n199) );
  aoi22s1 U209 ( .DIN1(\stored_partial_sums[0][0][4] ), .DIN2(n203), .DIN3(
        \stored_partial_sums[0][1][4] ), .DIN4(n202), .Q(n198) );
  aoi22s1 U210 ( .DIN1(\stored_partial_sums[0][2][5] ), .DIN2(n201), .DIN3(
        \stored_partial_sums[0][3][5] ), .DIN4(n200), .Q(n205) );
  aoi22s1 U211 ( .DIN1(\stored_partial_sums[0][0][5] ), .DIN2(n203), .DIN3(
        \stored_partial_sums[0][1][5] ), .DIN4(n202), .Q(n204) );
  nnd2s1 U212 ( .DIN1(n205), .DIN2(n204), .Q(\init_vals[1][0][5] ) );
  nnd3s2 U213 ( .DIN1(net4258), .DIN2(net4426), .DIN3(net4405), .Q(net3526) );
  oai21s1 U214 ( .DIN1(net4258), .DIN2(n218), .DIN3(net3672), .Q(n217) );
  xor2s1 U215 ( .DIN1(net3672), .DIN2(net4258), .Q(net3584) );
  nnd2s2 U216 ( .DIN1(n188), .DIN2(net3580), .Q(n211) );
  nnd2s2 U217 ( .DIN1(n220), .DIN2(n239), .Q(n212) );
  nnd2s2 U218 ( .DIN1(N25), .DIN2(n242), .Q(n229) );
  mxi21s2 U219 ( .DIN1(n213), .DIN2(n95), .SIN(n239), .Q(n214) );
  nnd2s2 U220 ( .DIN1(net4454), .DIN2(n217), .Q(net3564) );
  aoi42s1 U221 ( .DIN1(start), .DIN2(net3580), .DIN3(net4321), .DIN4(net4426), 
        .DIN5(n220), .DIN6(n219), .Q(net3557) );
  nnd3s2 U222 ( .DIN1(n86), .DIN2(net4257), .DIN3(state[2]), .Q(n221) );
  nnd2s2 U223 ( .DIN1(n183), .DIN2(\output_vals[0][1][1] ), .Q(n223) );
  oai21s2 U224 ( .DIN1(n111), .DIN2(n207), .DIN3(n223), .Q(n156) );
  nnd2s2 U225 ( .DIN1(n183), .DIN2(\output_vals[0][1][2] ), .Q(n224) );
  oai21s2 U226 ( .DIN1(n110), .DIN2(n207), .DIN3(n224), .Q(n157) );
  nnd2s2 U227 ( .DIN1(n183), .DIN2(\output_vals[0][1][3] ), .Q(n225) );
  oai21s2 U228 ( .DIN1(n109), .DIN2(n207), .DIN3(n225), .Q(n158) );
  nnd2s2 U229 ( .DIN1(n183), .DIN2(\output_vals[0][1][4] ), .Q(n226) );
  oai21s2 U230 ( .DIN1(n108), .DIN2(n207), .DIN3(n226), .Q(n159) );
  nnd2s2 U231 ( .DIN1(n183), .DIN2(\output_vals[0][1][5] ), .Q(n227) );
  oai21s2 U232 ( .DIN1(n107), .DIN2(n207), .DIN3(n227), .Q(n160) );
  nnd2s2 U233 ( .DIN1(n182), .DIN2(\output_vals[0][1][0] ), .Q(n230) );
  nnd2s2 U234 ( .DIN1(n184), .DIN2(\output_vals[0][1][2] ), .Q(n232) );
  nnd2s2 U235 ( .DIN1(n182), .DIN2(\output_vals[0][1][3] ), .Q(n233) );
  nnd2s2 U236 ( .DIN1(n184), .DIN2(\output_vals[0][1][5] ), .Q(n235) );
  nnd2s2 U237 ( .DIN1(n239), .DIN2(n95), .Q(n246) );
  and2s2 U238 ( .DIN1(n210), .DIN2(n241), .Q(_3_net_) );
  nnd2s2 U239 ( .DIN1(net4279), .DIN2(n243), .Q(n116) );
  nnd2s2 U240 ( .DIN1(\stored_partial_sums[0][0][5] ), .DIN2(n244), .Q(n122)
         );
  nnd2s2 U241 ( .DIN1(\stored_partial_sums[0][0][4] ), .DIN2(n244), .Q(n121)
         );
  nnd2s2 U242 ( .DIN1(\stored_partial_sums[0][0][3] ), .DIN2(n244), .Q(n120)
         );
  nnd2s2 U243 ( .DIN1(\stored_partial_sums[0][0][2] ), .DIN2(n244), .Q(n119)
         );
  nnd2s2 U244 ( .DIN1(\stored_partial_sums[0][0][1] ), .DIN2(n244), .Q(n118)
         );
  nnd2s2 U245 ( .DIN1(\stored_partial_sums[0][0][0] ), .DIN2(n244), .Q(n117)
         );
endmodule

